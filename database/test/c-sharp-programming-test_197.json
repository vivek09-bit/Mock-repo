[
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following assemblies can be stored in Global Assembly Cache?",
          "options": {
               "A": "Private Assemblies",
               "B": "Friend Assemblies",
               "C": "Shared Assemblies",
               "D": "Public Assemblies",
               "E": "Protected Assemblies"
          },
          "correct_answer": "C",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following .NET components can be used to remove unused references from the managed heap?",
          "options": {
               "A": "Common Language Infrastructure",
               "B": "CLR",
               "C": "Garbage Collector",
               "D": "Class Loader",
               "E": "CTS"
          },
          "correct_answer": "C",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following does not store a sign?",
          "options": {
               "A": "Short",
               "B": "Integer",
               "C": "Long",
               "D": "Byte",
               "E": "Single"
          },
          "correct_answer": "D",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "What will be the output of the following code snippet when it is executed?int x = 1; \n    float y = 1.1f;\n    short z = 1;\n    Console.WriteLine((float) x + y * z - (x += (short) y));",
          "options": {
               "A": "0.1",
               "B": "1.0",
               "C": "1.1",
               "D": "11"
          },
          "correct_answer": "A",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following statements is correct?",
          "options": {
               "A": "A constructor can be used to set default values and limit instantiation.",
               "B": "C# provides a copy constructor.",
               "C": "Destructors are used with classes as well as structures.",
               "D": "A class can have more than one destructor."
          },
          "correct_answer": "A",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following statements are correct about the C#.NET code snippet given below?class Sample\n{\n    static int i;\n    int j;\n    public void proc1()\n    {\n        i = 11; \n        j = 22;\n    }\n    public static void proc2()\n    {\n        i = 1;\n        j = 2;\n    }\n    static Sample()\n    {\n        i = 0; \n        j = 0;\n    }\n}",
          "options": {
               "A": "icannot be initialized inproc1().",
               "B": "proc1()can initializeias well asj.",
               "C": "jcan be initialized inproc2().",
               "D": "The constructor can never be declared asstatic.",
               "E": "proc2()can initializeias well asj."
          },
          "correct_answer": "B",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which  of the   following  statements  are   correct  about  static functions?Static functions can access only static data.Static functions cannot call instance functions.It is necessary to initialize static data.Instance functions can call static functions and access static data.thisreference is passed to static functions.",
          "options": {
               "A": "1, 2, 4",
               "B": "2, 3, 5",
               "C": "3, 4",
               "D": "4, 5",
               "E": "None of these"
          },
          "correct_answer": "A",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Multiple  inheritance  is different from  multiple  levels  of inheritance.",
          "options": {
               "A": "True",
               "B": "False"
          },
          "correct_answer": "A",
          "answer_description": "Multiple inheritance means deriving a class from more than one classes. On the other hand, multiple levels of inheritance means a class has been derived from a base class and the base class itself has been derived from another base class. Multiple inheritance is not permitted in C#.NET."
     },
     {
          "direction": null,
          "image_path": null,
          "question": "The way a derived class member function can access base class public members, the base class member functions can access public member functions of derived class.",
          "options": {
               "A": "True",
               "B": "False"
          },
          "correct_answer": "B",
          "answer_description": "Base class cannot access derived class members since it does not have any knowledge of the derived class."
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following statement is correct about a String in C#.NET?",
          "options": {
               "A": "A String is mutable because it can be modified once it has been created.",
               "B": "Methods of theStringclass can be used to modify the string.",
               "C": "A number CANNOT be represented in the form of a String.",
               "D": "A String has a zero-based index.",
               "E": "TheSystem.Arrayclass is used to represent a string."
          },
          "correct_answer": "D",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following will be the correct output for the C#.NET code snippet given below?String s1 = \"ALL MEN ARE CREATED EQUAL\";\nString s2;\ns2 = s1.Substring(12, 3); \nConsole.WriteLine(s2);",
          "options": {
               "A": "ARE",
               "B": "CRE",
               "C": "CR",
               "D": "REA",
               "E": "CREATED"
          },
          "correct_answer": "B",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Suppose on pushing a button an object is to be notified, but it is not known until runtime which object should be notified. Which of the following programming constructs should be used to implement this idea?",
          "options": {
               "A": "Attribute",
               "B": "Delegate",
               "C": "Namespace",
               "D": "Interface",
               "E": "Encapsulation"
          },
          "correct_answer": "B",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following is the correct way to call the functionMyFun()of theSampleclass given below?class Sample\n{\n    public int MyFun(int i)\n    {\n        Console.WriteLine(\"Welcome to IndiaBIX.com !\" );\n        return 0;\n    }\n}",
          "options": {
               "A": "delegate void del(int i);\nSample s = new Sample();\ndeld = new del(ref s.MyFun);\nd(10);",
               "B": "delegate int del(int i);\nSample s = new Sample(.);\ndel = new delegate(ref MyFun);\ndel(10);",
               "C": "Sample s = new Sample();\ndelegate void del = new delegate(ref MyFun);\ndel(10);",
               "D": "delegate int del(int i);\ndel d;\nSample s = new Sample();\nd = new del(ref s.MyFun);\nd(10);"
          },
          "correct_answer": "D",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "AHashTable tmaintains a collection of names of states and capital city of each state. Which of the following is the correct way to find out whether\"Kerala\"state is present in this collection or not?",
          "options": {
               "A": "t.ContainsKey(\"Kerala\");",
               "B": "t.HasValue(\"Kerala\");",
               "C": "t.HasKey(\"Kerala\");",
               "D": "t.ContainsState(\"Kerala\");",
               "E": "t.ContainsValue(\"Kerala\");"
          },
          "correct_answer": "A",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "IfSampleclass has aLengthproperty with get and set accessors then which of the following statements will work correctly?Sample.Length = 20;Sample m = new Sample(); \nm.Length = 10;Console.WriteLine(Sample.Length);Sample m = new Sample(); \nint len;\nlen = m.Length;Sample m = new Sample(); \nm.Length = m.Length + 20;",
          "options": {
               "A": "1, 3",
               "B": "2, 4, 5",
               "C": "4 only",
               "D": "3, 5"
          },
          "correct_answer": "B",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following statements is correct about an Exception?",
          "options": {
               "A": "It occurs during compilation.",
               "B": "It occurs during linking.",
               "C": "It occurs at run-time.",
               "D": "It occurs during Just-In-Time compilation.",
               "E": "It occurs during loading of the program."
          },
          "correct_answer": "C",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following statements is correct about the C#.NET program given below if a value\"ABCD\"is input to it?using System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index; \n            int vat = 88;\n            int[] a = new int(5];\n            try\n            {\n                Console.Write(\"Enter a number: \");\n                index = Convert.Toint32(Console.ReadLine());\n                a[index] = val;\n            }\n            catch(Exception e)\n            {\n                Console.Write(\"Exception occurred\");\n            }\n            Console.Write(\"Remaining program\");\n        }\n    }\n}",
          "options": {
               "A": "It will output: Exception occurred",
               "B": "It will output: Remaining program",
               "C": "It will output: Remaining program Exception occurred",
               "D": "It will output: Exception occurred Remaining program",
               "E": "The value88will get assigned toa[0]."
          },
          "correct_answer": "D",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following is the correct way to overload + operator?",
          "options": {
               "A": "public sample operator + ( sample a, sample b )",
               "B": "public abstract operator + ( sample a, sample b)",
               "C": "public abstract sample operator + (sample a, sample b )",
               "D": "public static sample operator + ( sample a, sample b )",
               "E": "All of the above"
          },
          "correct_answer": "D",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following statements is correct?",
          "options": {
               "A": "Only one object can be created from an abstract class.",
               "B": "By default methods are virtual.",
               "C": "If a derived class does not provide its own version of virtual method then the one in the base class is used.",
               "D": "If the method in the derived class is not preceded by override keywords, the compiler will issue a warning and the method will behave as if the override keyword were present.",
               "E": "Each derived class does not have its own version of a virtual method."
          },
          "correct_answer": "C",
          "answer_description": "Description not found"
     },
     {
          "direction": null,
          "image_path": null,
          "question": "Which of the following is the correct way to implement the interface given below?interface IPerson\n{ \n    String FirstName\n    {\n        get;\n        set; \n    } \n}",
          "options": {
               "A": "class Employee : IPerson\n{\n    private String str; \n    public String FirstName\n    {\n        get\n        { \n            return str;\n        } \n        set\n        { \n            str = value;\n        } \n    } \n}",
               "B": "class Employee\n{\n    private String str;\n    public String IPerson.FirstName\n    { \n        get\n        { \n            return str;\n        } \n        set\n        { \n            str = value;\n        } \n    } \n}",
               "C": "class Employee : implements IPerson\n{\n    private String str; \n    public String FirstName\n    { \n        get\n        { \n            return str;\n        } \n        set\n        {\n            str = value; \n        } \n    } \n}",
               "D": "None of the above"
          },
          "correct_answer": "A",
          "answer_description": "Description not found"
     }
]